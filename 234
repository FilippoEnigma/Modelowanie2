Aby rozwiązać zadanie dotyczące budowy metamodelu Sieci Petriego w programie Eclipse za pomocą języka Ecore, wykonaj poniższe kroki:

### Krok 1: Utworzenie projektu Ecore Modeling Project
1. Otwórz program Eclipse.
2. Przejdź do **File > New > Other...** i wybierz **Ecore Modeling Project**.
3. Nadaj projektowi nazwę, np. **PetriNetModel** i kliknij **Finish**.

### Krok 2: Utworzenie metamodelu
1. W nowo utworzonym projekcie kliknij prawym przyciskiem myszy na folder **model** i wybierz **New > Ecore Model**.
2. Nazwij plik, np. **PetriNet.ecore** i kliknij **Finish**.

### Krok 3: Tworzenie klasyfikatorów
1. Otwórz plik **PetriNet.ecore** w edytorze Ecore.
2. Dodaj następujące klasy:
   - **PetriNet** (zaznacz **isAbstract**: false)
   - **Node** (zaznacz **isAbstract**: true)
   - **Place** (rozszerzająca **Node**)
   - **Transition** (rozszerzająca **Node**)
   - **Arc** (zaznacz **isAbstract**: true)
   - **PlaceToTransitionArc** (rozszerzająca **Arc**)
   - **TransitionToPlaceArc** (rozszerzająca **Arc**)
   - **Token** (dla modelowania znaczników)

### Krok 4: Ustawienie atrybutów i relacji
1. Dla klasy **PetriNet**:
   - Dodaj atrybut **name** typu **EString**.
   - Dodaj kontenerową referencję **nodes** do klasy **Node** (wiele: *).

2. Dla klasy **Place**:
   - Dodaj atrybut **tokens** typu **EInt** (liczba znaczników).

3. Dla klasy **Arc**:
   - Dodaj atrybut **weight** typu **EInt** (waga łuku).

4. Dla klasy **PlaceToTransitionArc**:
   - Dodaj referencję **source** do klasy **Place** (jedno: 1).
   - Dodaj referencję **target** do klasy **Transition** (jedno: 1).

5. Dla klasy **TransitionToPlaceArc**:
   - Dodaj referencję **source** do klasy **Transition** (jedno: 1).
   - Dodaj referencję **target** do klasy **Place** (jedno: 1).

6. Dla klasy **Token**:
   - Dodaj atrybut **count** typu **EInt** (liczba znaczników).

### Krok 5: Definiowanie relacji między klasyfikatorami
1. Relacje **SuperType**:
   - Ustaw **Place** i **Transition** jako podtypy **Node**.
   - Ustaw **PlaceToTransitionArc** i **TransitionToPlaceArc** jako podtypy **Arc**.

2. Relacje **Composition**:
   - Ustaw **nodes** w **PetriNet** jako kompozycję dla **Node**.

3. Relacje **Reference**:
   - Ustaw relacje między **PlaceToTransitionArc** i **Place**, **Transition**.
   - Ustaw relacje między **TransitionToPlaceArc** i **Transition**, **Place**.

### Krok 6: Ustawienie parametrów w zakładce Properties
1. Kliknij na każdą z utworzonych klas i ustaw odpowiednie właściwości w zakładce **Properties**.
2. Upewnij się, że wszystkie klasy, atrybuty i relacje są poprawnie skonfigurowane.

### Krok 7: Generowanie plików .ecore i .genmodel
1. Po zakończeniu konfiguracji zapisz plik **PetriNet.ecore**.
2. Kliknij prawym przyciskiem myszy na plik **PetriNet.ecore** i wybierz **Generate Model Code**.
3. Wygenerowane pliki będą zawierać model i kod wygenerowany na podstawie metamodelu.

Aby rozwiązać zadanie 2 dotyczące utworzenia wtyczki do zbudowanego metamodelu Sieci Petriego i na jego podstawie zbudowania modelu, wykonaj poniższe kroki:

### Krok 1: Generowanie kodu dla metamodelu
1. **Otwórz projekt metamodelu**: W projekcie metamodelu otwórz plik **.genmodel**.
2. **Generuj kod**: Kliknij prawym przyciskiem myszy na pierwszy wiersz w pliku **.genmodel** i wybierz kolejno:
   - **Generate Model Code**
   - **Generate Edit Code**
   - **Generate Editor Code**
   - Alternatywnie, możesz wybrać **Generate All**.

### Krok 2: Konfiguracja uruchamiania projektu metamodelu
1. **Run Configurations**: Kliknij prawym przyciskiem myszy na nagłówku projektu metamodelu i wybierz **Run Configurations...**.
2. **Konfiguracja jako Eclipse Application**:
   - Wybierz **Eclipse Application** i dodaj nową konfigurację.
   - W zakładce **Plug-ins**, przy opcji **Launch with**, wybierz **Plug-ins selected below**.
   - Upewnij się, że wtyczka z nazwą twojego metamodelu jest zaznaczona.
   - Kliknij **Apply** i **Run**.

### Krok 3: Utworzenie nowego projektu modelu
1. **Nowa instancja Eclipse**: Po uruchomieniu nowej instancji Eclipse przejdź do nowego obszaru roboczego zgodnie z nazwą tej konfiguracji.
2. **Utwórz projekt (General)**: Utwórz nowy projekt w Eclipse, wybierając **File > New > Project...** i wybierz **General Project**. Nazwij go odpowiednio, np. **PetriNetInstance**.

### Krok 4: Włączenie perspektywy Modeling
1. **Perspektywa Modeling**: W nowej instancji Eclipse włącz perspektywę **Modeling**. Możesz to zrobić przez **Window > Perspective > Open Perspective > Other...** i wybierz **Modeling**.

### Krok 5: Utworzenie nowego pliku
1. **Nowy plik**: W utworzonym projekcie kliknij prawym przyciskiem myszy i wybierz **New > Other...**.
2. **Example EMF Model Creation Wizard**: Wybierz **Example EMF Model Creation Wizard** z katalogu **Example EMF Model Creation Wizards**.
3. **Wybór metamodelu**:
   - Podczas tworzenia nowego pliku wybierz metamodel modelujący Sieć Petriego jako korzeń modelu.
4. **Dodawanie klasyfikatorów**:
   - W ten sposób otworzy się plik **.metamodel**.
   - Kliknij prawym przyciskiem myszy na korzeniu modelu i wybierz **New Sibling** lub **New Child** i dodaj odpowiednie klasyfikatory.
   - W zakładce **Properties** ustaw właściwości dla tych elementów.

### Krok 6: Zbudowanie modelu na podstawie podanego rysunku
1. **Modelowanie Sieci Petriego**: Używając narzędzi dostępnych w perspektywie Modeling, zbuduj model Sieci Petriego zgodnie z podanym rysunkiem:
   - Dodaj miejsca (P0, P1, P2) i przejścia (T0, T1, T2, T3, T4).
   - Dodaj łuki łączące miejsca i przejścia zgodnie z rysunkiem.
   - Ustaw odpowiednią liczbę znaczników (tokens) w miejscach (np. 2 w P0).

---

Po wykonaniu tych kroków powinieneś mieć kompletny model Sieci Petriego utworzony w Eclipse na podstawie zbudowanego metamodelu. Jeśli potrzebujesz dodatkowych informacji lub napotkasz trudności, daj znać!
