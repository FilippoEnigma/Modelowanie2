module PetriNetTransformation;

create OUT : mMPetriNet from IN : listaElementówSieciPetriego;

rule Model2Model {
    from
        src : listaElementówSieciPetriego!Model
    to
        tgt : mMPetriNet!Model (
            name <- src.name,
            place <- src.place,
            transition <- src.transition,
            arcp2t <- src.arc->select(a | a.P2T),
            arct2p <- src.arc->select(a | a.T2P)
        )
}

rule Place2Place {
    from
        src : listaElementówSieciPetriego!Place
    to
        tgt : mMPetriNet!Place (
            name <- src.name,
            tokens <- src.tokens
        )
}

rule Transition2Transition {
    from
        src : listaElementówSieciPetriego!Transition
    to
        tgt : mMPetriNet!Transition (
            name <- src.name
        )
}

rule Arc2ArcP2T {
    from
        src : listaElementówSieciPetriego!Arc (src.P2T = true)
    to
        tgt : mMPetriNet!ArcP2T (
            name <- src.name,
            weight <- src.weight,
            inhibitor <- src.inhibitor,
            place <- src.source,
            transition <- src.target
        )
}

rule Arc2ArcT2P {
    from
        src : listaElementówSieciPetriego!Arc (src.T2P = true)
    to
        tgt : mMPetriNet!ArcT2P (
            name <- src.name,
            weight <- src.weight,
            place <- src.target,
            transition <- src.source
        )
}
